"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6714],{49514:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"7.0.0","label":"7.0.0","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-7.0.0","isLast":false,"docsSidebars":{"docs":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"GraphQLite","href":"/docs/7.0.0/","docId":"index"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Installation","items":[{"type":"link","label":"Getting Started","href":"/docs/7.0.0/getting-started","docId":"getting-started"},{"type":"link","label":"Symfony bundle","href":"/docs/7.0.0/symfony-bundle","docId":"symfony-bundle"},{"type":"link","label":"Laravel package","href":"/docs/7.0.0/laravel-package","docId":"laravel-package"},{"type":"link","label":"Universal service providers","href":"/docs/7.0.0/universal-service-providers","docId":"universal-service-providers"},{"type":"link","label":"Other frameworks / No framework","href":"/docs/7.0.0/other-frameworks","docId":"other-frameworks"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Usage","items":[{"type":"link","label":"Queries","href":"/docs/7.0.0/queries","docId":"queries"},{"type":"link","label":"Mutations","href":"/docs/7.0.0/mutations","docId":"mutations"},{"type":"link","label":"Subscriptions","href":"/docs/7.0.0/subscriptions","docId":"subscriptions"},{"type":"link","label":"Type mapping","href":"/docs/7.0.0/type-mapping","docId":"type-mapping"},{"type":"link","label":"Autowiring services","href":"/docs/7.0.0/autowiring","docId":"autowiring"},{"type":"link","label":"Extending a type","href":"/docs/7.0.0/extend-type","docId":"extend-type"},{"type":"link","label":"External type declaration","href":"/docs/7.0.0/external-type-declaration","docId":"external-type-declaration"},{"type":"link","label":"Input types","href":"/docs/7.0.0/input-types","docId":"input-types"},{"type":"link","label":"Inheritance and interfaces","href":"/docs/7.0.0/inheritance-interfaces","docId":"inheritance-interfaces"},{"type":"link","label":"Error handling","href":"/docs/7.0.0/error-handling","docId":"error-handling"},{"type":"link","label":"User input validation","href":"/docs/7.0.0/validation","docId":"validation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Security","items":[{"type":"link","label":"Authentication and authorization","href":"/docs/7.0.0/authentication-authorization","docId":"authentication-authorization"},{"type":"link","label":"Fine grained security","href":"/docs/7.0.0/fine-grained-security","docId":"fine-grained-security"},{"type":"link","label":"Connecting security to your framework","href":"/docs/7.0.0/implementing-security","docId":"implementing-security"},{"type":"link","label":"Operation complexity","href":"/docs/7.0.0/operation-complexity","docId":"operation-complexity"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Performance","items":[{"type":"link","label":"Query plan","href":"/docs/7.0.0/query-plan","docId":"query-plan"},{"type":"link","label":"Prefetching records","href":"/docs/7.0.0/prefetch-method","docId":"prefetch-method"},{"type":"link","label":"Automatic persisted queries","href":"/docs/7.0.0/automatic-persisted-queries","docId":"automatic-persisted-queries"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced","items":[{"type":"link","label":"File uploads","href":"/docs/7.0.0/file-uploads","docId":"file-uploads"},{"type":"link","label":"Pagination","href":"/docs/7.0.0/pagination","docId":"pagination"},{"type":"link","label":"Custom types","href":"/docs/7.0.0/custom-types","docId":"custom-types"},{"type":"link","label":"Custom annotations","href":"/docs/7.0.0/field-middlewares","docId":"field-middlewares"},{"type":"link","label":"Custom argument resolving","href":"/docs/7.0.0/argument-resolving","docId":"argument-resolving"},{"type":"link","label":"Extending an input type","href":"/docs/7.0.0/extend-input-type","docId":"extend-input-type"},{"type":"link","label":"Class with multiple output types","href":"/docs/7.0.0/multiple-output-types","docId":"multiple-output-types"},{"type":"link","label":"Symfony specific features","href":"/docs/7.0.0/symfony-bundle-advanced","docId":"symfony-bundle-advanced"},{"type":"link","label":"Laravel specific features","href":"/docs/7.0.0/laravel-package-advanced","docId":"laravel-package-advanced"},{"type":"link","label":"Internals","href":"/docs/7.0.0/internals","docId":"internals"},{"type":"link","label":"Troubleshooting","href":"/docs/7.0.0/troubleshooting","docId":"troubleshooting"},{"type":"link","label":"Migrating","href":"/docs/7.0.0/migrating","docId":"migrating"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Reference","items":[{"type":"link","label":"Annotations VS Attributes","href":"/docs/7.0.0/doctrine-annotations-attributes","docId":"doctrine-annotations-attributes"},{"type":"link","label":"Annotations reference","href":"/docs/7.0.0/annotations-reference","docId":"annotations-reference"},{"type":"link","label":"Semantic versioning","href":"/docs/7.0.0/semver","docId":"semver"},{"type":"link","label":"Changelog","href":"/docs/7.0.0/changelog","docId":"changelog"}],"collapsed":true,"collapsible":true}]},"docs":{"annotations-reference":{"id":"annotations-reference","title":"Annotations reference","description":"Note: all annotations are available both in a Doctrine annotation format (@Query) and in PHP 8 attribute format (#[Query]).","sidebar":"docs"},"argument-resolving":{"id":"argument-resolving","title":"Extending argument resolving","description":"Available in GraphQLite 4.0+","sidebar":"docs"},"authentication-authorization":{"id":"authentication-authorization","title":"Authentication and authorization","description":"You might not want to expose your GraphQL API to anyone. Or you might want to keep some","sidebar":"docs"},"automatic-persisted-queries":{"id":"automatic-persisted-queries","title":"Automatic persisted queries","description":"The problem","sidebar":"docs"},"autowiring":{"id":"autowiring","title":"Autowiring services","description":"GraphQLite can automatically inject services in your fields/queries/mutations signatures.","sidebar":"docs"},"changelog":{"id":"changelog","title":"Changelog","description":"7.0.0","sidebar":"docs"},"custom-types":{"id":"custom-types","title":"Custom types","description":"In some special cases, you want to override the GraphQL return type that is attributed by default by GraphQLite.","sidebar":"docs"},"doctrine-annotations-attributes":{"id":"doctrine-annotations-attributes","title":"Doctrine annotations VS PHP8 attributes","description":"GraphQLite is heavily relying on the concept of annotations (also called attributes in PHP 8+).","sidebar":"docs"},"error-handling":{"id":"error-handling","title":"Error handling","description":"In GraphQL, when an error occurs, the server must add an \\"error\\" entry in the response.","sidebar":"docs"},"extend-input-type":{"id":"extend-input-type","title":"Extending an input type","description":"Available in GraphQLite 4.0+","sidebar":"docs"},"extend-type":{"id":"extend-type","title":"Extending a type","description":"Fields exposed in a GraphQL type do not need to be all part of the same class.","sidebar":"docs"},"external-type-declaration":{"id":"external-type-declaration","title":"External type declaration","description":"In some cases, you cannot or do not want to put an annotation on a domain class.","sidebar":"docs"},"field-middlewares":{"id":"field-middlewares","title":"Adding custom annotations with Field middlewares","description":"Available in GraphQLite 4.0+","sidebar":"docs"},"file-uploads":{"id":"file-uploads","title":"File uploads","description":"GraphQL does not support natively the notion of file uploads, but an extension to the GraphQL protocol was proposed","sidebar":"docs"},"fine-grained-security":{"id":"fine-grained-security","title":"Fine grained security","description":"If the @Logged and @Right annotations are not","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting started","description":"GraphQLite is a framework agnostic library. You can use it in any PHP project as long as you know how to","sidebar":"docs"},"implementing-security":{"id":"implementing-security","title":"Connecting GraphQLite to your framework\'s security module","description":"At the time of writing, the Symfony Bundle and the Laravel package handle this implementation. For the latest documentation, please see their respective Github repositories.","sidebar":"docs"},"index":{"id":"index","title":"GraphQLite","description":"A PHP library that allows you to write your GraphQL queries in simple-to-write controllers.","sidebar":"docs"},"inheritance-interfaces":{"id":"inheritance-interfaces","title":"Inheritance and interfaces","description":"Modeling inheritance","sidebar":"docs"},"input-types":{"id":"input-types","title":"Input types","description":"Let\'s assume you are developing an API that returns a list of cities around a location.","sidebar":"docs"},"internals":{"id":"internals","title":"Internals","description":"Mapping types","sidebar":"docs"},"laravel-package":{"id":"laravel-package","title":"Getting started with Laravel","description":"Be advised! This documentation will be removed in a future release.  For current and up-to-date Laravel extension specific documentation, please see the Github repository.","sidebar":"docs"},"laravel-package-advanced":{"id":"laravel-package-advanced","title":"Laravel package: advanced usage","description":"Be advised! This documentation will be removed in a future release.  For current and up-to-date Laravel extension specific documentation, please see the Github repository.","sidebar":"docs"},"migrating":{"id":"migrating","title":"Migrating","description":"Migrating from v4.0 to v4.1","sidebar":"docs"},"multiple-output-types":{"id":"multiple-output-types","title":"Mapping multiple output types for the same class","description":"Available in GraphQLite 4.0+","sidebar":"docs"},"mutations":{"id":"mutations","title":"Mutations","description":"In GraphQLite, mutations are created like queries.","sidebar":"docs"},"operation-complexity":{"id":"operation-complexity","title":"Operation complexity","description":"At some point you may find yourself receiving queries with an insane amount of requested","sidebar":"docs"},"other-frameworks":{"id":"other-frameworks","title":"Getting started with any framework","description":"Installation","sidebar":"docs"},"pagination":{"id":"pagination","title":"Paginating large result sets","description":"It is quite common to have to paginate over large result sets.","sidebar":"docs"},"prefetch-method":{"id":"prefetch-method","title":"Prefetching records","description":"The problem","sidebar":"docs"},"queries":{"id":"queries","title":"Queries","description":"In GraphQLite, GraphQL queries are created by writing methods in controller classes.","sidebar":"docs"},"query-plan":{"id":"query-plan","title":"Query plan","description":"The problem","sidebar":"docs"},"semver":{"id":"semver","title":"Our backward compatibility promise","description":"Ensuring smooth upgrades of your project is a priority. That\'s why we promise you backward compatibility (BC) for all minor GraphQLite releases. You probably recognize this strategy as Semantic Versioning. In short, Semantic Versioning means that only major releases (such as 4.0, 5.0 etc.) are allowed to break backward compatibility. Minor releases (such as 4.0, 4.1 etc.) may introduce new features, but must do so without breaking the existing API of that release branch (4.x in the previous example).","sidebar":"docs"},"subscriptions":{"id":"subscriptions","title":"Subscriptions","description":"In GraphQLite, subscriptions are created like queries or mutations.","sidebar":"docs"},"symfony-bundle":{"id":"symfony-bundle","title":"Getting started with Symfony","description":"Be advised! This documentation will be removed in a future release.  For current and up-to-date Symfony bundle specific documentation, please see the Github repository.","sidebar":"docs"},"symfony-bundle-advanced":{"id":"symfony-bundle-advanced","title":"Symfony bundle: advanced usage","description":"Be advised! This documentation will be removed in a future release.  For current and up-to-date Symfony bundle specific documentation, please see the Github repository.","sidebar":"docs"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"Error: Maximum function nesting level of \'100\' reached","sidebar":"docs"},"type-mapping":{"id":"type-mapping","title":"Type mapping","description":"As explained in the queries section, the job of GraphQLite is to create GraphQL types from PHP types.","sidebar":"docs"},"universal-service-providers":{"id":"universal-service-providers","title":"Getting started with a framework compatible with container-interop/service-provider","description":"container-interop/service-provider is an experimental project","sidebar":"docs"},"validation":{"id":"validation","title":"Validation","description":"GraphQLite does not handle user input validation by itself. It is out of its scope.","sidebar":"docs"}}}')}}]);